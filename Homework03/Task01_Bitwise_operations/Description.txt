ЗАДАЧА 1: Побитови операции

Да се разработи програма тип меню, която обработва присъствия и отсъствия на клас от 64 студенти. За целта да се използва 64-битова маска, а не масив или друга сложна структура от данни!
- да се добави опция за въвеждане на присъствие;
- да се добави опция за въвеждане на отсъствие (изтриване на присъствие);
- да се добави опция за извеждане на номерата на студентите, които отсъстват;
- да се добави опция за извеждане на номерата на студентите, които присъстват;
- да се добави опция за промяна на статута на студент - ако присъства да се запише като отсъстващ или ако отсъства да се запише като присъстващ.
Да се добави валидация на данните - невалидна опция, невалиден номер на студент...
За решението на задачата може (но не е задължително) да се използва следната структура:

1.	int main(void)
2.	{
3.	    uint64_t attendance = 0;
4.	    int option;
5.	    while (1)
6.	    {
7.	        std::cout << "1. Set attendance" << std::endl;
8.	        std::cout << "2. Clear attendance\n") << std::endl;
9.	        std::cout << "3. Attendance info\n") << std::endl;
10.	        std::cout << "4. Change attendance\n") << std::endl;
11.	        std::cout << "5. Exit" << std::endl;
12.	        Std::cin >> option;
13.	        if (option == 1)
14.	        {
15.	             // to do
16.	        }
17.	        else if (option == 2)
18.	        {
19.	            // to do
20.	        }
21.	        else if (option == 3)
22.	        {
23.	           // to do
24.	        }
25.	        // to do
26.	    }
27.	    return 0;
28.	}


Обяснение:

Присъствие и отсъствие - Студентите могат да се маркират като присъстващи или отсъстващи чрез използването на битови операции.
Вход от потребителя - Има валидация на входа, за да се уверим, че потребителят въвежда валидни опции и номера на студенти.
Извеждане на отсъстващите студенти - Чрез проверка на всеки бит в attendance, можем да определим кои студенти отсъстват.
Промяна на статуса - Използваме операцията XOR (^=), за да променим статуса на студента от присъстващ на отсъстващ и обратно.
